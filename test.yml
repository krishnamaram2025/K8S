apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: idp-ui
  name:  idp-ui
  namespace: idp
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: idp-ui
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: idp-ui
    spec:
      topologySpreadConstarints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector: 
          matchLabels:
            app.kubernetes.io/name: idp-ui
      matchLableKeys:
      - pod-template-hash
      containers:
      - image: krishnamaram2/idp-ui:4fe4da70a1ff7d0fb573afd176ae557aebb56688
        name: idp-ui
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        securityContext: 
          allowPrivilegedEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
            
       

---
apiVersion: v1
kind: Service
metadata:
   name: idp-ui-svc
   namespace: idp
spec:
  type: ClusterIP
  selector:
     app.kubernetes.io/name: idp-ui
  ports:
  -  port: 80
     targetPort: 8080



####### The below is example for NodePort
# ---
# apiVersion: v1
# kind: Service
# metadata:
#    name: idp-ui-svc
#    namespace: idp
# spec:
#   type: NodePort
#   selector:
#      app.kubernetes.io/name: idp-ui
#   ports:
#   -  port: 80
#      targetPort: 80
#      nodePort: 30001
